#Once you've installed NumPy you can import it as a library

>>>import numpy as np

#np.<TAB> will show you all the operation that u can perform with the numpy object

>>> my_list = [1,2,3,4,5,6]
>>> my_list
[1,2,3,4,5,6]

>>>np.array(my_list)
array([1, 2, 3])

>>> mat = [[1,2,3],[4,5,6],[7,8,9]]
[[1, 2, 3], [4, 5, 6], [7, 8, 9]]

>>>np.array(mat)
array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]])
       
#There are some method to make array

1.arange

>>>np.arange(0,10)
array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])

>>>np.arange(0,11,2)
array([ 0,  2,  4,  6,  8, 10])


2.Zeros and Ones

>>>np.zeros(3)
array([ 0.,  0.,  0.])

>>>np.zeros((5,5))
array([[ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]])
       
>>>np.ones(5)
array([1.,  1.,  1.,  1.,  1.])

>>>np.ones((4,4))
array([[ 1.,  1.,  1.,  1.],
       [ 1.,  1.,  1.,  1.],
       [ 1.,  1.,  1.,  1.],
       [ 1.,  1.,  1.,  1.]])
       
3.linspace
>>>np.linspace(0,10,3)
array([  0.,   5.,  10.])

>>>np.linspace(0,10,20)
array([  0.        ,   0.52631579,   1.05263158,   1.57894737,
         2.10526316,   2.63157895,   3.15789474,   3.68421053,
         4.21052632,   4.73684211,   5.26315789,   5.78947368,
         6.31578947,   6.84210526,   7.36842105,   7.89473684,
         8.42105263,   8.94736842,   9.47368421,  10.        ])
    
 4.eye
 >>>np.eye(4)
 array([[ 1.,  0.,  0.,  0.],
       [ 0.,  1.,  0.,  0.],
       [ 0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  1.]])
       
       
 
  Random       
  ->numpy can create random number array
  
 1.rand
  >>>np.random.rand(3)
 array([ 0.33076169,  0.87524698,  0.02793403]) 
  
  >>>np.random.rand(5,5)
  array([[ 0.66660768,  0.87589888,  0.12421056,  0.65074126,  0.60260888],
       [ 0.70027668,  0.85572434,  0.8464595 ,  0.2735416 ,  0.10955384],
       [ 0.0670566 ,  0.83267738,  0.9082729 ,  0.58249129,  0.12305748],
       [ 0.27948423,  0.66422017,  0.95639833,  0.34238788,  0.9578872 ],
       [ 0.72155386,  0.3035422 ,  0.85249683,  0.30414307,  0.79718816]])
       
 2.randn
 >>>np.random.randn(2)
 array([-0.27954018,  0.90078368])
 
 >>>np.random.randn(5,5)
 array([[ 0.70154515,  0.22441999,  1.33563186,  0.82872577, -0.28247509],
       [ 0.64489788,  0.61815094, -0.81693168, -0.30102424, -0.29030574],
       [ 0.8695976 ,  0.413755  ,  2.20047208,  0.17955692, -0.82159344],
       [ 0.59264235,  1.29869894, -1.18870241,  0.11590888, -0.09181687],
       [-0.96924265, -1.62888685, -2.05787102, -0.29705576,  0.68915542]])
       
3.randint
>>>np.random.randint(1,100)
84
  
>>>np.random.randint(1,100,10)
array([13, 64, 25, 33, 46, 68, 78, 19, 3, 34])
  
>>>arr = np.arange(25)
>>>ranarr = np.random.randint(0,50,10)

>>>arr
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24])
       
>>>ranarr
array([10, 12, 41, 17, 49,  2, 46,  3, 19, 39])
>>>ranrr.argmax()
4
>>>ranarr.argmin()
5
>>>ranarr.max()
49
>>>ranarr.min()
2


Reshape
>>>arr.reshape(5,5)
array([[ 0,  1,  2,  3,  4],
       [ 5,  6,  7,  8,  9],
       [10, 11, 12, 13, 14],
       [15, 16, 17, 18, 19],
       [20, 21, 22, 23, 24]])
       
 Shape
 >>>arr.shape
 (25,)
 
 >>>arr.reshape(1,25)
 array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 19, 20, 21, 22, 23, 24]])
        
>>>arr.reshape(1,25).shape
(1,25)

>>>arr.reshape(25,1)
array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
       [ 9],
       [10],
       [11],
       [12],
       [13],
       [14],
       [15],
       [16],
       [17],
       [18],
       [19],
       [20],
       [21],
       [22],
       [23],
       [24]])
       
 >>>arr.reshape(25,1).shape
 (25, 1)
 
 
 Dtype
 
>>>arr.dtype
dtype('int64')
